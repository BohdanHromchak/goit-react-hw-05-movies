{"version":3,"file":"static/js/968.849ccd06.chunk.js","mappings":"oRAGaA,EAAOC,EAAAA,GAAAA,GAAH,uGAOJC,EAAOD,EAAAA,GAAAA,GAAH,+F,SCkCjB,EAvCa,WACX,OAA0CE,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdN,GAAa,GAFC,UAGSO,EAAAA,EAAAA,MAHT,OAGRC,EAHQ,OAIdV,EAAiBU,EAASC,SAJZ,gDAMdP,GAAS,GANK,yBAQdF,GAAa,GARC,4EAAH,qDAWfM,GACD,GAAE,KAGD,iCACE,2CACCL,IAAS,wEACTF,IAAa,uCACd,SAACN,EAAD,UACGI,EAAca,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACjB,SAAClB,EAAD,WACE,SAAC,KAAD,CAAMmB,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMb,GAAzC,SACGS,GAASC,KAFHF,EADM,QAU1B,C,qLCzCM,SAAeJ,IAAtB,+B,aAAO,O,oBAAA,sGACkBU,MAAM,kGADxB,cACCC,EADD,gBAKkBA,EAASC,OAL3B,cAKCX,EALD,yBAMEA,GANF,kEAUA,SAAeY,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,yFACkBJ,MAAM,4CAAD,OAEWI,EAFX,6DADvB,cACCH,EADD,gBAKiBA,EAASC,OAL1B,cAKCG,EALD,yBAMEA,GANF,kEAUA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA2BC,GAA3B,yFACkBP,MAAM,8IAAD,OAE6GO,IAHpI,cACCN,EADD,gBAKqBA,EAASC,OAL9B,cAKCM,EALD,yBAMEA,GANF,kEAUA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAyBf,GAAzB,yFACkBM,MAAM,gDAAD,OAEWN,EAFX,qEADvB,cACCO,EADD,gBAKcA,EAASC,OALvB,cAKCQ,EALD,yBAMEA,GANF,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BjB,GAA5B,yFACkBM,MAAM,kDAAD,OAEaN,EAFb,4EADvB,cACCO,EADD,gBAKiBA,EAASC,OAL1B,cAKCU,EALD,yBAMEA,GANF,kE,sBCzCP,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOtC,GAEP,YADAgC,EAAOhC,EAET,CAEIqC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Home/Home.styled.js","components/Home/Home.js","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 15px;\n`;\n\nexport const Item = styled.li`\n\n&:hover,\n  &:focus {\n    color: blue;\n    font-weight: 500;\n  }\n`;","import { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchTrending } from \"services/api\";\nimport { List, Item  } from './Home.styled';\n\nconst Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchdata = async () => {\n      try {\n        setIsLoading(true);\n        const trending = await fetchTrending();\n        setTrendingFilms(trending.results);\n      } catch (e) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchdata();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {error && <p>Something went wrong please reload the page!</p>}\n      {isLoading && <p>Loading...</p>}\n      <List>\n        {trendingFilms.map(({ id, title, name }) => (\n          <Item key={id}>\n            <Link to={`movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Home;\n","// Home (trendings)\nexport async function fetchTrending() {\n  const response = await fetch(\n    `\n      https://api.themoviedb.org/3/trending/all/day?api_key=9736a35e31abd19d6144591c8e77ccff`\n  );\n  const trending = await response.json();\n  return trending;\n}\n\n// MovieDetails (search by id)\nexport async function fetchDetails(movieId) {\n  const response = await fetch(\n    `\n    https://api.themoviedb.org/3/movie/${movieId}?api_key=9736a35e31abd19d6144591c8e77ccff&language=en-US`\n  );\n  const details = await response.json();\n  return details;\n}\n\n// Movies (search by name)\nexport async function fetchSearch(movieName) {\n  const response = await fetch(\n    `\n      https://api.themoviedb.org/3/search/movie?api_key=9736a35e31abd19d6144591c8e77ccff&language=en-US&page=1&include_adult=false&query=${movieName}`\n  );\n  const searchQuery = await response.json();\n  return searchQuery;\n}\n\n// Cast\nexport async function fetchCast(id) {\n  const response = await fetch(\n    `    \n    https://api.themoviedb.org/3/movie/${id}/credits?api_key=9736a35e31abd19d6144591c8e77ccff&language=en-US`\n  );\n  const cast = await response.json();\n  return cast;\n}\n\n// Reviews\nexport async function fetchReviews(id) {\n  const response = await fetch(\n    `    \n      https://api.themoviedb.org/3/movie/${id}/reviews?api_key=9736a35e31abd19d6144591c8e77ccff&language=en-US&page=1`\n  );\n  const reviews = await response.json();\n  return reviews;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["List","styled","Item","useState","trendingFilms","setTrendingFilms","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","fetchdata","fetchTrending","trending","results","map","id","title","name","to","state","from","fetch","response","json","fetchDetails","movieId","details","fetchSearch","movieName","searchQuery","fetchCast","cast","fetchReviews","reviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}