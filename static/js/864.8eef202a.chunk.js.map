{"version":3,"file":"static/js/864.8eef202a.chunk.js","mappings":"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","sources":["components/Movies/Movies.styled.js","components/Movies/Movies.js","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 15px;\n`;\n\nexport const Item = styled.li`\n\n&:hover,\n  &:focus {\n    color: blue;\n    font-weight: 500;\n  }\n`;","import { useState, useEffect } from \"react\";\nimport { fetchSearch } from \"services/api\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { List, Item  } from './Movies.styled';\n\nconst Movies = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get(\"query\");\n  const location = useLocation();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!inputValue.trim()) {\n      return;\n    }\n    setSearchParams({ query: inputValue });\n    setInputValue(\"\");\n  };\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n\n    const fetchdata = async () => {\n      try {\n        setMovies([]);\n        setNotFound(false);\n        setIsLoading(true);\n        const movieDetails = await fetchSearch(movieName);\n        setMovies(movieDetails.results);\n        console.log(movieDetails.results.length);\n        if (movieName !== \"\" && movieDetails.results.length === 0) {\n          setNotFound(true);\n        }\n      } catch (e) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchdata();\n  }, [movieName]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button type=\"submit\" style={{cursor: \"pointer\"}}>Search</button>\n      </form>\n      {error && <p>Something went wrong please reload the page!</p>}\n      {isLoading && <p>Loading...</p>}\n      {notFound && (\n        <p>\n          There is not any movie for this request. Please, change the query!\n        </p>\n      )}\n      <List>\n        {movies.map(({ id, title }) => (\n          <Item key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;\n","// Home (trendings)\nexport async function fetchTrending() {\n  const response = await fetch(\n    `\n      https://api.themoviedb.org/3/trending/all/day?api_key=9736a35e31abd19d6144591c8e77ccff`\n  );\n  const trending = await response.json();\n  return trending;\n}\n\n// MovieDetails (search by id)\nexport async function fetchDetails(movieId) {\n  const response = await fetch(\n    `\n    https://api.themoviedb.org/3/movie/${movieId}?api_key=9736a35e31abd19d6144591c8e77ccff&language=en-US`\n  );\n  const details = await response.json();\n  return details;\n}\n\n// Movies (search by name)\nexport async function fetchSearch(movieName) {\n  const response = await fetch(\n    `\n      https://api.themoviedb.org/3/search/movie?api_key=9736a35e31abd19d6144591c8e77ccff&language=en-US&page=1&include_adult=false&query=${movieName}`\n  );\n  const searchQuery = await response.json();\n  return searchQuery;\n}\n\n// Cast\nexport async function fetchCast(id) {\n  const response = await fetch(\n    `    \n    https://api.themoviedb.org/3/movie/${id}/credits?api_key=9736a35e31abd19d6144591c8e77ccff&language=en-US`\n  );\n  const cast = await response.json();\n  return cast;\n}\n\n// Reviews\nexport async function fetchReviews(id) {\n  const response = await fetch(\n    `    \n      https://api.themoviedb.org/3/movie/${id}/reviews?api_key=9736a35e31abd19d6144591c8e77ccff&language=en-US&page=1`\n  );\n  const reviews = await response.json();\n  return reviews;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["List","styled","Item","useState","inputValue","setInputValue","movies","setMovies","isLoading","setIsLoading","error","setError","notFound","setNotFound","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","fetchdata","fetchSearch","movieDetails","results","console","log","length","onSubmit","e","preventDefault","trim","query","type","autoComplete","autoFocus","placeholder","value","onChange","target","style","cursor","map","id","title","to","state","from","fetchTrending","fetch","response","json","trending","fetchDetails","movieId","details","searchQuery","fetchCast","cast","fetchReviews","reviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}